# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/01-squad-utils.ipynb (unless otherwise specified).

__all__ = ['get_answer_start', 'generate_qas_dict', 'create_squad_from_df', 'save_dict_as_json', 'read_json_as_dict']

# Cell
from fastai.core import *

# Cell
def get_answer_start(context, answer):
    len_a = len(answer)
    for i, _ in enumerate(context):
        if context[i:i+len_a] == answer: return i
    raise Exception("No overlapping segment found")

# Cell
def generate_qas_dict(text_id, context, answer, question, impossible=False):
    qas_dict = {}
    qas_dict['question'] = question
    qas_dict['id'] = text_id
    qas_dict['is_impossible'] = impossible

    if answer is None: qas_dict['answers'] = []
    else:
        answer_start = get_answer_start(context, answer)
        qas_dict['answers'] = [{"text":answer, "answer_start":answer_start}]
    return qas_dict

# Cell
def create_squad_from_df(df):
    data_dicts = []
    for _, row in df.iterrows():
        text_id = row['textID']
        context = row['text']
        answer =  row['selected_text'] if 'selected_text' in row else None
        question = row['sentiment']

        qas_dict = generate_qas_dict(text_id, context, answer, question)
        data_dict = {"paragraphs" : [{"qas" : [qas_dict], "context":context}]}
        data_dict['title'] = text_id
        data_dicts.append(data_dict)
    return {"version": "v2.0", "data": data_dicts}

# Cell
def save_dict_as_json(d, fname):
    with open(fname, "w") as f: f.write(json.dumps(d))

# Cell
def read_json_as_dict(fname):
    return json.loads(open(fname).read())